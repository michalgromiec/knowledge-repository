# What is it
DAX (DynamoDB Accelerator) is a separate cluster contains cache nodes for dynamodb. It's fully-managed, highly available, seamless in-memory.

It allows for microseconds latency for cached queries.

It doesn't require any change in application, simple recognize that query has been cached and return cached results.

It solves "hot key" problem - when reading same key very often, you would consume lot of RCUs.

Default TTL is 300 seconds (can be changed)

You can have up to 10 nodes in the cluster, it's possible to have multi-az environement (min 3 nodes recommended).
It's up to developer how big will be cluster, he can also decide what types of machines will be used to create cluster (it's quite detailed, you have to create VPC, subnet, security groups, so it seems that underneath group of EC2 containers are created).

in effect it's quite expensive, as it's not serverless and the smallest cluster could costs hundreds of dollars monthly (on the other hand, RCU capacity can be decreased if your dynamodb tables are frequently requested for reading data)

to use dax cluster, application should query daxx cluster endpoint instead of dynamodb endpoint

# Differences vs ElastiCache
* DAX has been build specifically for dynamodb, elasticache supports other data stores, like redis, memcached
* DAX is run on cluster and have native replication
* DAX is optimized for read-heavy workloads
* DAX have a cache of individual objects (queries/scans), while elasticache stores whole computational process (aggregation etc)
